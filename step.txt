ขั้นตอนการดำเนินงาน

1. ติดตั้ง Raspberry Pi OS พร้อมกับตั้งค่า Wifi ที่ต้องการจะให้เชื่อมต่อ ลง Micro SD Card แล้วนำไปเสียบที่ Board Raspberry Pi 3 Model B+ เพื่อใช้งาน
2. เข้าใช้งาน Terminal ของระบบปฏิบัติการ Raspbian ด้วย IP ด้วยการใช้คำสั่ง ssh os@172.20.10.14 ใน Command Prompt ของระบบปฏิบัติการ Windows
3. ทำการออก Token ของ Line Notify เพื่อนำมาใช้งานในการให้ตัว Raspbian ส่งข้อความไปยัง Line Notify ของผู้ที่ออก

4. ฝั่งของ Windows ใช้โปรแกรม Arduino IDE ในการเขียนโปรแกรมด้วย C++ Language เพื่อให้สามารถส่งข้อมูลไปยัง Raspberry Pi ผ่าน Serial Communication ได้ แล้วทำการ Upload Program ไปยัง Board Arduino Uno R3
5. ฝั่งของ Raspbian ใช้ Terminal ในการเขียนโปรแกรมด้วย Python Language เพื่อเขียนโปรแกรมในส่วนของการส่งข้อความไปยัง Line Notify โดยใช้ Token ที่ออกมา และเขียนโปรแกรมเพื่อให้สามารถรับข้อมูลที่ส่งมาจาก Arduino ได้ 
ุ6. นำ Module Ultrasonic US-100 ต่อเข้ากับ Board Arduino แล้วทำการเขียนโปรแกรมเพื่อรับค่าระยะห่าง แล้วทำการ Upload ลง Board
7. นำ Board Arduino Uno R3 และ Raspberry Pi 3 Model B+ มาเชื่อมต่อกันด้วย USB 2.0 Type A to Type B
8. ฝั่งของ Raspbian เขียนโปรแกรมเพิ่มเติมในส่วนของการส่งข้อความไปยัง Line Notify โดยเมื่อ Board Raspberry Pi เริ่มทำงานจะให้ส่งข้อความ "รถยนต์ป้ายทะเบียน...ถูกสตาร์ท" และเขียนโปรแกรมต่อจากการรับค่าจาก Arduino โดยให้รับค่าระยะห่าง
ที่ได้จาก Sensor มาเข้าเงื่อนไขว่าค่าที่รับมา น้อยกว่าหรือเท่ากับ 6 หรือไม่ ถ้าใช่ จะส่งข้อความ "รถยนนต์ป้ายทะเบียน...เกิดอุบัติเหตุ" ไปยัง Line Notify ถ้าไม่ โปรแกรมก็จะรับค่าที่ส่งมาต่อไปเรื่อย ๆ
9. ฝั่งของ Raspbian เขียนโปรแกรมเพิ่มเติมในส่วนของการควบคุม Module LED 8 ดวง ผ่าน GPIO ของ Board Raspberry Pi โดยมีเงื่อนไขว่าค่าที่รับมาจาก Sensor น้อยกว่าหรือเท่ากับ 6 หรือไม่ ถ้าใช่ LED ทั้ง 8 ดวงจะกระพิบตามจำนวนรอบที่ตั้งไว้ในโปรแกรม
ถ้าไม่ LED ทั้ง 8 ดวง จะไม่กระพิบ

------------------------------------------------------------
ขั้นตอนการดำเนินงาน

1. ติดตั้ง Raspberry Pi OS พร้อมกับตั้งค่า Wifi ที่ต้องการจะให้เชื่อมต่อลง Micro SD Card
2. ใช้งาน Terminal ของ Raspbian ด้วย IP โดยใช้คำสั่ง ssh os@172.20.10.14 ใน Command Prompt ของ Windows
3. ออก Token ของ Line Notify เพื่อให้ตัว Raspbian สามารถส่งข้อความไปยัง Line Notify ได้

4. ฝั่ง Windows ใช้โปรแกรม Arduino IDE เขียนโปรแกรมให้สามารถส่งข้อมูลไปยัง Raspberry Pi ผ่าน Serial Communication ได้
5. ฝั่งของ Raspbian ใช้ Terminal เขียนโปรแกรมภาษา Python ในส่วนของการส่งข้อความไปยัง Line Notify ผ่าน Token ที่ออกมา 
และเขียนโปรแกรมให้สามารถรับค่าที่ส่งมาจาก Arduino ได้
6. นำ Module Ultrasonic ต่อเข้ากับ Arduino แล้วเขียนโปรแกรมเพื่อรับค่าระยะห่าง
7. นำ Board Arduino และ Raspberry Pi เชื่อมต่อกันผ่าน USB 2.0 Type A to Type B

8. ฝั่งของ Raspbian เขียนโปรแกรมเพิ่มเติมในส่วนของการส่งข้อความไปยัง Line Notify โดยเมื่อ Board Raspberry Pi เริ่มทำงาน
จะส่งข้อความไปยัง Line Notify และทำการเช็คว่าค่าที่ได้จาก Sensor ที่รับมา น้อยกว่าหรือเท่าค่าที่กำหนดหรือไม่ ถ้าใช่ จะส่งข้อความไปที่ 
Line Notify ถ้าไม่ ก็จะไม่มีการส่งข้อความ
9. ฝั่งของ Raspbian เขียนโปรแกรมเพิ่มเติมในส่วนของการควบคุม Module LED 8 ดวง ผ่าน GPIO ของ Board Raspberry Pi โดยเมื่อ
Board Raspberry Pi เริ่มทำงาน จะมีการติดดับของไฟรูปแบบนึง และทำการเช็คว่าค่าที่ได้จาก Sensor ที่รับมา น้อยกว่าหรือเท่ากับค่าที่กำหนด
หรือไม่ ถ้าใช่ จะมีการติดดับของไฟเป็นอีกรูปแบบนึง ที่แตกต่างจาก Board เริ่มทำงาน ถ้าไม่ ไฟก็จะไม่มีการเปลี่ยนแปลง
